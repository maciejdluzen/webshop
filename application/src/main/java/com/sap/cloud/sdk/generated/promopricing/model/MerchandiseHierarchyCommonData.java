/*
 * Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved.
 */

/*
 * Calculation
 * You use the Calculation service for SAP Omnichannel Promotion Pricing in your sales channel application to determine the effective sales prices by applying promotional rules in the relevant customer context. The service can be called for a single product or for an entire shopping cart. The calculation is based on the data you uploaded to the cloud environment, and sends back prices and additional information about customer rewards to the calling application.
 *
 * OpenAPI spec version: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sap.cloud.sdk.generated.promopricing.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.google.gson.annotations.SerializedName;

import javax.annotation.Nonnull;

/**
 * Unique in combination with the master data source system ID.
 */
@ApiModel(description = "Unique in combination with the master data source system ID.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

// CHECKSTYLE:OFF
public class MerchandiseHierarchyCommonData 
// CHECKSTYLE:ON
{
  @JsonProperty("value")
  @SerializedName("value")
  private String value;

  @JsonProperty("ID")
  @SerializedName("ID")
  private String ID;


   /**
   * Set the value of this {@link MerchandiseHierarchyCommonData} instance and return the same instance.
   *
   * @param value  Requires ID field to be unique.
   * @return The same instance of this {@link MerchandiseHierarchyCommonData} class
   */
   @Nonnull public MerchandiseHierarchyCommonData value(@Nonnull final String value) {
    this.value = value;
    return this;
  }

   /**
   * Requires ID field to be unique.
   * @return value  The value of this {@link MerchandiseHierarchyCommonData} instance.
  **/
  @ApiModelProperty(value = "Requires ID field to be unique.")
  @Nonnull public String getValue() {
    return value;
  }

  /**
  * Set the value of this {@link MerchandiseHierarchyCommonData} instance.
  *
  * @param value  Requires ID field to be unique.
  */
  public void setValue( @Nonnull final String value) {
    this.value = value;
  }

   /**
   * Set the ID of this {@link MerchandiseHierarchyCommonData} instance and return the same instance.
   *
   * @param ID  Several hierarchies may exist in parallel. In one request, at the most 2 different hierarchy identifiers can be specified.
   * @return The same instance of this {@link MerchandiseHierarchyCommonData} class
   */
   @Nonnull public MerchandiseHierarchyCommonData ID(@Nonnull final String ID) {
    this.ID = ID;
    return this;
  }

   /**
   * Several hierarchies may exist in parallel. In one request, at the most 2 different hierarchy identifiers can be specified.
   * @return ID  The ID of this {@link MerchandiseHierarchyCommonData} instance.
  **/
  @ApiModelProperty(value = "Several hierarchies may exist in parallel. In one request, at the most 2 different hierarchy identifiers can be specified.")
  @Nonnull public String getID() {
    return ID;
  }

  /**
  * Set the ID of this {@link MerchandiseHierarchyCommonData} instance.
  *
  * @param ID  Several hierarchies may exist in parallel. In one request, at the most 2 different hierarchy identifiers can be specified.
  */
  public void setID( @Nonnull final String ID) {
    this.ID = ID;
  }
  @Override
  public boolean equals(@Nonnull final java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    final MerchandiseHierarchyCommonData merchandiseHierarchyCommonData = (MerchandiseHierarchyCommonData) o;
    return Objects.equals(this.value, merchandiseHierarchyCommonData.value) &&
        Objects.equals(this.ID, merchandiseHierarchyCommonData.ID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(value, ID);
  }


  @Override
  @Nonnull public String toString() {
    final StringBuilder sb = new StringBuilder();
    sb.append("class MerchandiseHierarchyCommonData {\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(final java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


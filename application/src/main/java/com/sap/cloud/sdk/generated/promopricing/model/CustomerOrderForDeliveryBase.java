/*
 * Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved.
 */

/*
 * Calculation
 * You use the Calculation service for SAP Omnichannel Promotion Pricing in your sales channel application to determine the effective sales prices by applying promotional rules in the relevant customer context. The service can be called for a single product or for an entire shopping cart. The calculation is based on the data you uploaded to the cloud environment, and sends back prices and additional information about customer rewards to the calling application.
 *
 * OpenAPI spec version: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sap.cloud.sdk.generated.promopricing.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.sap.cloud.sdk.generated.promopricing.model.AmountCommonData;
import com.sap.cloud.sdk.generated.promopricing.model.ExtendedAmountType;
import com.sap.cloud.sdk.generated.promopricing.model.FrequentShopperPointsModifierType;
import com.sap.cloud.sdk.generated.promopricing.model.ItemID;
import com.sap.cloud.sdk.generated.promopricing.model.ItemLink;
import com.sap.cloud.sdk.generated.promopricing.model.LineItemAttributeType;
import com.sap.cloud.sdk.generated.promopricing.model.MerchandiseHierarchyCommonData;
import com.sap.cloud.sdk.generated.promopricing.model.PromotionManualTriggerType;
import com.sap.cloud.sdk.generated.promopricing.model.PromotionPriceDerivationRuleReferenceType;
import com.sap.cloud.sdk.generated.promopricing.model.QuantityCommonData;
import com.sap.cloud.sdk.generated.promopricing.model.RetailPriceModifierDomainSpecific;
import com.sap.cloud.sdk.generated.promopricing.model.UnitPriceCommonData;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;
import com.google.gson.annotations.SerializedName;

import javax.annotation.Nonnull;

/**
 * A flavor of a line item whereby customers purchase an unavailable item. The store places a special order on behalf of this purchase, and the item is to be delivered as soon as available. The customer may, or may not pay for the item at the time of the order placement. 
 */
@ApiModel(description = "A flavor of a line item whereby customers purchase an unavailable item. The store places a special order on behalf of this purchase, and the item is to be delivered as soon as available. The customer may, or may not pay for the item at the time of the order placement. ")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

// CHECKSTYLE:OFF
public class CustomerOrderForDeliveryBase 
// CHECKSTYLE:ON
{
  @JsonProperty("any")
  @SerializedName("any")
  private List<Object> any = new ArrayList<>();

  @JsonProperty("ItemID")
  @SerializedName("ItemID")
  private List<ItemID> itemID = new ArrayList<>();

  @JsonProperty("MerchandiseHierarchy")
  @SerializedName("MerchandiseHierarchy")
  private List<MerchandiseHierarchyCommonData> merchandiseHierarchy = new ArrayList<>();

  @JsonProperty("RegularSalesUnitPrice")
  @SerializedName("RegularSalesUnitPrice")
  private UnitPriceCommonData regularSalesUnitPrice;

  @JsonProperty("ExtendedAmount")
  @SerializedName("ExtendedAmount")
  private ExtendedAmountType extendedAmount;

  @JsonProperty("ExtendedDiscountAmount")
  @SerializedName("ExtendedDiscountAmount")
  private AmountCommonData extendedDiscountAmount;

  @JsonProperty("Quantity")
  @SerializedName("Quantity")
  private List<QuantityCommonData> quantity = new ArrayList<>();

  @JsonProperty("RetailPriceModifier")
  @SerializedName("RetailPriceModifier")
  private List<RetailPriceModifierDomainSpecific> retailPriceModifier = new ArrayList<>();

  @JsonProperty("ItemLink")
  @SerializedName("ItemLink")
  private List<ItemLink> itemLink = new ArrayList<>();

  /**
   * Reserved for future use.
   */
  public enum ItemTypeEnum {
    /**
    * The STOCK option of this CustomerOrderForDeliveryBase
    */
    STOCK("Stock"),
    
    /**
    * The GIFTCERTIFICATE option of this CustomerOrderForDeliveryBase
    */
    GIFTCERTIFICATE("GiftCertificate");

    private String value;

    ItemTypeEnum(String value) {
      this.value = value;
    }

    /**
    * Get the value of the enum
    * @return The enum value
    */
    @JsonValue
    @Nonnull public String getValue() {
      return value;
    }

    /**
    * Get the String value of the enum value.
    * @return The enum value as String
    */
    @Override
    @Nonnull public String toString() {
      return String.valueOf(value);
    }

    /**
    * Get the enum value from a String value
    * @param value The Strin value
    * @return The enum value of type CustomerOrderForDeliveryBase
    */
    @JsonCreator
    @Nonnull public static ItemTypeEnum fromValue(@Nonnull final String value) {
      for (ItemTypeEnum b : ItemTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  @JsonProperty("ItemType")
  @SerializedName("ItemType")
  private ItemTypeEnum itemType;

  @JsonProperty("NonDiscountableFlag")
  @SerializedName("NonDiscountableFlag")
  private Boolean nonDiscountableFlag;

  @JsonProperty("FixedPriceFlag")
  @SerializedName("FixedPriceFlag")
  private Boolean fixedPriceFlag;

  @JsonProperty("TaxIncludedInPriceFlag")
  @SerializedName("TaxIncludedInPriceFlag")
  private Boolean taxIncludedInPriceFlag;

  @JsonProperty("NonPieceGoodFlag")
  @SerializedName("NonPieceGoodFlag")
  private Boolean nonPieceGoodFlag;

  @JsonProperty("FrequentShopperPointsEligibilityFlag")
  @SerializedName("FrequentShopperPointsEligibilityFlag")
  private Boolean frequentShopperPointsEligibilityFlag;

  @JsonProperty("DiscountTypeCode")
  @SerializedName("DiscountTypeCode")
  private String discountTypeCode;

  /**
   * Reserved for future use. Value 00 corresponds to \&quot;regular price\&quot;.
   */
  public enum PriceTypeCodeEnum {
    /**
    * The _00 option of this CustomerOrderForDeliveryBase
    */
    _00("00"),
    
    /**
    * The _01 option of this CustomerOrderForDeliveryBase
    */
    _01("01");

    private String value;

    PriceTypeCodeEnum(String value) {
      this.value = value;
    }

    /**
    * Get the value of the enum
    * @return The enum value
    */
    @JsonValue
    @Nonnull public String getValue() {
      return value;
    }

    /**
    * Get the String value of the enum value.
    * @return The enum value as String
    */
    @Override
    @Nonnull public String toString() {
      return String.valueOf(value);
    }

    /**
    * Get the enum value from a String value
    * @param value The Strin value
    * @return The enum value of type CustomerOrderForDeliveryBase
    */
    @JsonCreator
    @Nonnull public static PriceTypeCodeEnum fromValue(@Nonnull final String value) {
      for (PriceTypeCodeEnum b : PriceTypeCodeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  @JsonProperty("PriceTypeCode")
  @SerializedName("PriceTypeCode")
  private PriceTypeCodeEnum priceTypeCode;

  @JsonProperty("NotConsideredByPriceEngineFlag")
  @SerializedName("NotConsideredByPriceEngineFlag")
  private Boolean notConsideredByPriceEngineFlag;

  @JsonProperty("FrequentShopperPointsModifier")
  @SerializedName("FrequentShopperPointsModifier")
  private List<FrequentShopperPointsModifierType> frequentShopperPointsModifier = new ArrayList<>();

  @JsonProperty("PromotionPriceDerivationRuleReference")
  @SerializedName("PromotionPriceDerivationRuleReference")
  private List<PromotionPriceDerivationRuleReferenceType> promotionPriceDerivationRuleReference = new ArrayList<>();

  @JsonProperty("PromotionManualTrigger")
  @SerializedName("PromotionManualTrigger")
  private List<PromotionManualTriggerType> promotionManualTrigger = new ArrayList<>();

  @JsonProperty("LineItemAttribute")
  @SerializedName("LineItemAttribute")
  private List<LineItemAttributeType> lineItemAttribute = new ArrayList<>();


   /**
   * Set the any of this {@link CustomerOrderForDeliveryBase} instance and return the same instance.
   *
   * @param any  This is currently not supported.
   * @return The same instance of this {@link CustomerOrderForDeliveryBase} class
   */
   @Nonnull public CustomerOrderForDeliveryBase any(@Nonnull final List<Object> any) {
    this.any = any;
    return this;
  }
  /**
  * Add one Any instance to this {@link CustomerOrderForDeliveryBase}.
  * @param anyItem The Any that should be added
  * @return The same instance of type {@link CustomerOrderForDeliveryBase}
  */
  @Nonnull public CustomerOrderForDeliveryBase addAnyItem( @Nonnull final Object anyItem) {
    if (this.any == null) {
      this.any = new ArrayList<>();
    }
    this.any.add(anyItem);
    return this;
  }

   /**
   * This is currently not supported.
   * @return any  The any of this {@link CustomerOrderForDeliveryBase} instance.
  **/
  @ApiModelProperty(value = "This is currently not supported.")
  @Nonnull public List<Object> getAny() {
    return any;
  }

  /**
  * Set the any of this {@link CustomerOrderForDeliveryBase} instance.
  *
  * @param any  This is currently not supported.
  */
  public void setAny( @Nonnull final List<Object> any) {
    this.any = any;
  }

   /**
   * Set the itemID of this {@link CustomerOrderForDeliveryBase} instance and return the same instance.
   *
   * @param itemID  Although this is an array, only 1 entry is supported.
   * @return The same instance of this {@link CustomerOrderForDeliveryBase} class
   */
   @Nonnull public CustomerOrderForDeliveryBase itemID(@Nonnull final List<ItemID> itemID) {
    this.itemID = itemID;
    return this;
  }
  /**
  * Add one ItemID instance to this {@link CustomerOrderForDeliveryBase}.
  * @param itemIDItem The ItemID that should be added
  * @return The same instance of type {@link CustomerOrderForDeliveryBase}
  */
  @Nonnull public CustomerOrderForDeliveryBase addItemIDItem( @Nonnull final ItemID itemIDItem) {
    if (this.itemID == null) {
      this.itemID = new ArrayList<>();
    }
    this.itemID.add(itemIDItem);
    return this;
  }

   /**
   * Although this is an array, only 1 entry is supported.
   * @return itemID  The itemID of this {@link CustomerOrderForDeliveryBase} instance.
  **/
  @ApiModelProperty(value = "Although this is an array, only 1 entry is supported.")
  @Nonnull public List<ItemID> getItemID() {
    return itemID;
  }

  /**
  * Set the itemID of this {@link CustomerOrderForDeliveryBase} instance.
  *
  * @param itemID  Although this is an array, only 1 entry is supported.
  */
  public void setItemID( @Nonnull final List<ItemID> itemID) {
    this.itemID = itemID;
  }

   /**
   * Set the merchandiseHierarchy of this {@link CustomerOrderForDeliveryBase} instance and return the same instance.
   *
   * @param merchandiseHierarchy  For information purposes only. The relevant list of hierarchy nodes is expected on the level of LineItemDomainSpecific.
   * @return The same instance of this {@link CustomerOrderForDeliveryBase} class
   */
   @Nonnull public CustomerOrderForDeliveryBase merchandiseHierarchy(@Nonnull final List<MerchandiseHierarchyCommonData> merchandiseHierarchy) {
    this.merchandiseHierarchy = merchandiseHierarchy;
    return this;
  }
  /**
  * Add one MerchandiseHierarchy instance to this {@link CustomerOrderForDeliveryBase}.
  * @param merchandiseHierarchyItem The MerchandiseHierarchy that should be added
  * @return The same instance of type {@link CustomerOrderForDeliveryBase}
  */
  @Nonnull public CustomerOrderForDeliveryBase addMerchandiseHierarchyItem( @Nonnull final MerchandiseHierarchyCommonData merchandiseHierarchyItem) {
    if (this.merchandiseHierarchy == null) {
      this.merchandiseHierarchy = new ArrayList<>();
    }
    this.merchandiseHierarchy.add(merchandiseHierarchyItem);
    return this;
  }

   /**
   * For information purposes only. The relevant list of hierarchy nodes is expected on the level of LineItemDomainSpecific.
   * @return merchandiseHierarchy  The merchandiseHierarchy of this {@link CustomerOrderForDeliveryBase} instance.
  **/
  @ApiModelProperty(value = "For information purposes only. The relevant list of hierarchy nodes is expected on the level of LineItemDomainSpecific.")
  @Nonnull public List<MerchandiseHierarchyCommonData> getMerchandiseHierarchy() {
    return merchandiseHierarchy;
  }

  /**
  * Set the merchandiseHierarchy of this {@link CustomerOrderForDeliveryBase} instance.
  *
  * @param merchandiseHierarchy  For information purposes only. The relevant list of hierarchy nodes is expected on the level of LineItemDomainSpecific.
  */
  public void setMerchandiseHierarchy( @Nonnull final List<MerchandiseHierarchyCommonData> merchandiseHierarchy) {
    this.merchandiseHierarchy = merchandiseHierarchy;
  }

   /**
   * Set the regularSalesUnitPrice of this {@link CustomerOrderForDeliveryBase} instance and return the same instance.
   *
   * @param regularSalesUnitPrice  The regularSalesUnitPrice of this {@link CustomerOrderForDeliveryBase}
   * @return The same instance of this {@link CustomerOrderForDeliveryBase} class
   */
   @Nonnull public CustomerOrderForDeliveryBase regularSalesUnitPrice(@Nonnull final UnitPriceCommonData regularSalesUnitPrice) {
    this.regularSalesUnitPrice = regularSalesUnitPrice;
    return this;
  }

   /**
   * Get regularSalesUnitPrice
   * @return regularSalesUnitPrice  The regularSalesUnitPrice of this {@link CustomerOrderForDeliveryBase} instance.
  **/
  @ApiModelProperty(value = "")
  @Nonnull public UnitPriceCommonData getRegularSalesUnitPrice() {
    return regularSalesUnitPrice;
  }

  /**
  * Set the regularSalesUnitPrice of this {@link CustomerOrderForDeliveryBase} instance.
  *
  * @param regularSalesUnitPrice  The regularSalesUnitPrice of this {@link CustomerOrderForDeliveryBase}
  */
  public void setRegularSalesUnitPrice( @Nonnull final UnitPriceCommonData regularSalesUnitPrice) {
    this.regularSalesUnitPrice = regularSalesUnitPrice;
  }

   /**
   * Set the extendedAmount of this {@link CustomerOrderForDeliveryBase} instance and return the same instance.
   *
   * @param extendedAmount  The extendedAmount of this {@link CustomerOrderForDeliveryBase}
   * @return The same instance of this {@link CustomerOrderForDeliveryBase} class
   */
   @Nonnull public CustomerOrderForDeliveryBase extendedAmount(@Nonnull final ExtendedAmountType extendedAmount) {
    this.extendedAmount = extendedAmount;
    return this;
  }

   /**
   * Get extendedAmount
   * @return extendedAmount  The extendedAmount of this {@link CustomerOrderForDeliveryBase} instance.
  **/
  @ApiModelProperty(value = "")
  @Nonnull public ExtendedAmountType getExtendedAmount() {
    return extendedAmount;
  }

  /**
  * Set the extendedAmount of this {@link CustomerOrderForDeliveryBase} instance.
  *
  * @param extendedAmount  The extendedAmount of this {@link CustomerOrderForDeliveryBase}
  */
  public void setExtendedAmount( @Nonnull final ExtendedAmountType extendedAmount) {
    this.extendedAmount = extendedAmount;
  }

   /**
   * Set the extendedDiscountAmount of this {@link CustomerOrderForDeliveryBase} instance and return the same instance.
   *
   * @param extendedDiscountAmount  The extendedDiscountAmount of this {@link CustomerOrderForDeliveryBase}
   * @return The same instance of this {@link CustomerOrderForDeliveryBase} class
   */
   @Nonnull public CustomerOrderForDeliveryBase extendedDiscountAmount(@Nonnull final AmountCommonData extendedDiscountAmount) {
    this.extendedDiscountAmount = extendedDiscountAmount;
    return this;
  }

   /**
   * Get extendedDiscountAmount
   * @return extendedDiscountAmount  The extendedDiscountAmount of this {@link CustomerOrderForDeliveryBase} instance.
  **/
  @ApiModelProperty(value = "")
  @Nonnull public AmountCommonData getExtendedDiscountAmount() {
    return extendedDiscountAmount;
  }

  /**
  * Set the extendedDiscountAmount of this {@link CustomerOrderForDeliveryBase} instance.
  *
  * @param extendedDiscountAmount  The extendedDiscountAmount of this {@link CustomerOrderForDeliveryBase}
  */
  public void setExtendedDiscountAmount( @Nonnull final AmountCommonData extendedDiscountAmount) {
    this.extendedDiscountAmount = extendedDiscountAmount;
  }

   /**
   * Set the quantity of this {@link CustomerOrderForDeliveryBase} instance and return the same instance.
   *
   * @param quantity  The quantity of this line item. Although this is an array, only 1 entry is allowed.
   * @return The same instance of this {@link CustomerOrderForDeliveryBase} class
   */
   @Nonnull public CustomerOrderForDeliveryBase quantity(@Nonnull final List<QuantityCommonData> quantity) {
    this.quantity = quantity;
    return this;
  }
  /**
  * Add one Quantity instance to this {@link CustomerOrderForDeliveryBase}.
  * @param quantityItem The Quantity that should be added
  * @return The same instance of type {@link CustomerOrderForDeliveryBase}
  */
  @Nonnull public CustomerOrderForDeliveryBase addQuantityItem( @Nonnull final QuantityCommonData quantityItem) {
    if (this.quantity == null) {
      this.quantity = new ArrayList<>();
    }
    this.quantity.add(quantityItem);
    return this;
  }

   /**
   * The quantity of this line item. Although this is an array, only 1 entry is allowed.
   * @return quantity  The quantity of this {@link CustomerOrderForDeliveryBase} instance.
  **/
  @ApiModelProperty(value = "The quantity of this line item. Although this is an array, only 1 entry is allowed.")
  @Nonnull public List<QuantityCommonData> getQuantity() {
    return quantity;
  }

  /**
  * Set the quantity of this {@link CustomerOrderForDeliveryBase} instance.
  *
  * @param quantity  The quantity of this line item. Although this is an array, only 1 entry is allowed.
  */
  public void setQuantity( @Nonnull final List<QuantityCommonData> quantity) {
    this.quantity = quantity;
  }

   /**
   * Set the retailPriceModifier of this {@link CustomerOrderForDeliveryBase} instance and return the same instance.
   *
   * @param retailPriceModifier  The list of modifiers of the sales price triggered by applied price derivation rules.
   * @return The same instance of this {@link CustomerOrderForDeliveryBase} class
   */
   @Nonnull public CustomerOrderForDeliveryBase retailPriceModifier(@Nonnull final List<RetailPriceModifierDomainSpecific> retailPriceModifier) {
    this.retailPriceModifier = retailPriceModifier;
    return this;
  }
  /**
  * Add one RetailPriceModifier instance to this {@link CustomerOrderForDeliveryBase}.
  * @param retailPriceModifierItem The RetailPriceModifier that should be added
  * @return The same instance of type {@link CustomerOrderForDeliveryBase}
  */
  @Nonnull public CustomerOrderForDeliveryBase addRetailPriceModifierItem( @Nonnull final RetailPriceModifierDomainSpecific retailPriceModifierItem) {
    if (this.retailPriceModifier == null) {
      this.retailPriceModifier = new ArrayList<>();
    }
    this.retailPriceModifier.add(retailPriceModifierItem);
    return this;
  }

   /**
   * The list of modifiers of the sales price triggered by applied price derivation rules.
   * @return retailPriceModifier  The retailPriceModifier of this {@link CustomerOrderForDeliveryBase} instance.
  **/
  @ApiModelProperty(value = "The list of modifiers of the sales price triggered by applied price derivation rules.")
  @Nonnull public List<RetailPriceModifierDomainSpecific> getRetailPriceModifier() {
    return retailPriceModifier;
  }

  /**
  * Set the retailPriceModifier of this {@link CustomerOrderForDeliveryBase} instance.
  *
  * @param retailPriceModifier  The list of modifiers of the sales price triggered by applied price derivation rules.
  */
  public void setRetailPriceModifier( @Nonnull final List<RetailPriceModifierDomainSpecific> retailPriceModifier) {
    this.retailPriceModifier = retailPriceModifier;
  }

   /**
   * Set the itemLink of this {@link CustomerOrderForDeliveryBase} instance and return the same instance.
   *
   * @param itemLink  Reserved for future use.
   * @return The same instance of this {@link CustomerOrderForDeliveryBase} class
   */
   @Nonnull public CustomerOrderForDeliveryBase itemLink(@Nonnull final List<ItemLink> itemLink) {
    this.itemLink = itemLink;
    return this;
  }
  /**
  * Add one ItemLink instance to this {@link CustomerOrderForDeliveryBase}.
  * @param itemLinkItem The ItemLink that should be added
  * @return The same instance of type {@link CustomerOrderForDeliveryBase}
  */
  @Nonnull public CustomerOrderForDeliveryBase addItemLinkItem( @Nonnull final ItemLink itemLinkItem) {
    if (this.itemLink == null) {
      this.itemLink = new ArrayList<>();
    }
    this.itemLink.add(itemLinkItem);
    return this;
  }

   /**
   * Reserved for future use.
   * @return itemLink  The itemLink of this {@link CustomerOrderForDeliveryBase} instance.
  **/
  @ApiModelProperty(value = "Reserved for future use.")
  @Nonnull public List<ItemLink> getItemLink() {
    return itemLink;
  }

  /**
  * Set the itemLink of this {@link CustomerOrderForDeliveryBase} instance.
  *
  * @param itemLink  Reserved for future use.
  */
  public void setItemLink( @Nonnull final List<ItemLink> itemLink) {
    this.itemLink = itemLink;
  }

   /**
   * Set the itemType of this {@link CustomerOrderForDeliveryBase} instance and return the same instance.
   *
   * @param itemType  Reserved for future use.
   * @return The same instance of this {@link CustomerOrderForDeliveryBase} class
   */
   @Nonnull public CustomerOrderForDeliveryBase itemType(@Nonnull final ItemTypeEnum itemType) {
    this.itemType = itemType;
    return this;
  }

   /**
   * Reserved for future use.
   * @return itemType  The itemType of this {@link CustomerOrderForDeliveryBase} instance.
  **/
  @ApiModelProperty(value = "Reserved for future use.")
  @Nonnull public ItemTypeEnum getItemType() {
    return itemType;
  }

  /**
  * Set the itemType of this {@link CustomerOrderForDeliveryBase} instance.
  *
  * @param itemType  Reserved for future use.
  */
  public void setItemType( @Nonnull final ItemTypeEnum itemType) {
    this.itemType = itemType;
  }

   /**
   * Set the nonDiscountableFlag of this {@link CustomerOrderForDeliveryBase} instance and return the same instance.
   *
   * @param nonDiscountableFlag  Specifies whether this line item may be discounted or not. If set to true, the line item may still be used as an eligibility for promotions. However, such an item does not contribute to fulfill the amount or quantity threshold that is needed for a promotion to become effective. 
   * @return The same instance of this {@link CustomerOrderForDeliveryBase} class
   */
   @Nonnull public CustomerOrderForDeliveryBase nonDiscountableFlag(@Nonnull final Boolean nonDiscountableFlag) {
    this.nonDiscountableFlag = nonDiscountableFlag;
    return this;
  }

   /**
   * Specifies whether this line item may be discounted or not. If set to true, the line item may still be used as an eligibility for promotions. However, such an item does not contribute to fulfill the amount or quantity threshold that is needed for a promotion to become effective. 
   * @return nonDiscountableFlag  The nonDiscountableFlag of this {@link CustomerOrderForDeliveryBase} instance.
  **/
  @ApiModelProperty(value = "Specifies whether this line item may be discounted or not. If set to true, the line item may still be used as an eligibility for promotions. However, such an item does not contribute to fulfill the amount or quantity threshold that is needed for a promotion to become effective. ")
  @Nonnull public Boolean isNonDiscountableFlag() {
    return nonDiscountableFlag;
  }

  /**
  * Set the nonDiscountableFlag of this {@link CustomerOrderForDeliveryBase} instance.
  *
  * @param nonDiscountableFlag  Specifies whether this line item may be discounted or not. If set to true, the line item may still be used as an eligibility for promotions. However, such an item does not contribute to fulfill the amount or quantity threshold that is needed for a promotion to become effective. 
  */
  public void setNonDiscountableFlag( @Nonnull final Boolean nonDiscountableFlag) {
    this.nonDiscountableFlag = nonDiscountableFlag;
  }

   /**
   * Set the fixedPriceFlag of this {@link CustomerOrderForDeliveryBase} instance and return the same instance.
   *
   * @param fixedPriceFlag  If set to true, the price calculation uses the provided value of RegularSalesUnitPrice as regular price and does not perform a price lookup for this line item.
   * @return The same instance of this {@link CustomerOrderForDeliveryBase} class
   */
   @Nonnull public CustomerOrderForDeliveryBase fixedPriceFlag(@Nonnull final Boolean fixedPriceFlag) {
    this.fixedPriceFlag = fixedPriceFlag;
    return this;
  }

   /**
   * If set to true, the price calculation uses the provided value of RegularSalesUnitPrice as regular price and does not perform a price lookup for this line item.
   * @return fixedPriceFlag  The fixedPriceFlag of this {@link CustomerOrderForDeliveryBase} instance.
  **/
  @ApiModelProperty(value = "If set to true, the price calculation uses the provided value of RegularSalesUnitPrice as regular price and does not perform a price lookup for this line item.")
  @Nonnull public Boolean isFixedPriceFlag() {
    return fixedPriceFlag;
  }

  /**
  * Set the fixedPriceFlag of this {@link CustomerOrderForDeliveryBase} instance.
  *
  * @param fixedPriceFlag  If set to true, the price calculation uses the provided value of RegularSalesUnitPrice as regular price and does not perform a price lookup for this line item.
  */
  public void setFixedPriceFlag( @Nonnull final Boolean fixedPriceFlag) {
    this.fixedPriceFlag = fixedPriceFlag;
  }

   /**
   * Set the taxIncludedInPriceFlag of this {@link CustomerOrderForDeliveryBase} instance and return the same instance.
   *
   * @param taxIncludedInPriceFlag  Reserved for future use.
   * @return The same instance of this {@link CustomerOrderForDeliveryBase} class
   */
   @Nonnull public CustomerOrderForDeliveryBase taxIncludedInPriceFlag(@Nonnull final Boolean taxIncludedInPriceFlag) {
    this.taxIncludedInPriceFlag = taxIncludedInPriceFlag;
    return this;
  }

   /**
   * Reserved for future use.
   * @return taxIncludedInPriceFlag  The taxIncludedInPriceFlag of this {@link CustomerOrderForDeliveryBase} instance.
  **/
  @ApiModelProperty(value = "Reserved for future use.")
  @Nonnull public Boolean isTaxIncludedInPriceFlag() {
    return taxIncludedInPriceFlag;
  }

  /**
  * Set the taxIncludedInPriceFlag of this {@link CustomerOrderForDeliveryBase} instance.
  *
  * @param taxIncludedInPriceFlag  Reserved for future use.
  */
  public void setTaxIncludedInPriceFlag( @Nonnull final Boolean taxIncludedInPriceFlag) {
    this.taxIncludedInPriceFlag = taxIncludedInPriceFlag;
  }

   /**
   * Set the nonPieceGoodFlag of this {@link CustomerOrderForDeliveryBase} instance and return the same instance.
   *
   * @param nonPieceGoodFlag  Set this flag to true, if the specified quantity has a different dimension than \&quot;piece\&quot;, for example, if fractional quantities are possible.
   * @return The same instance of this {@link CustomerOrderForDeliveryBase} class
   */
   @Nonnull public CustomerOrderForDeliveryBase nonPieceGoodFlag(@Nonnull final Boolean nonPieceGoodFlag) {
    this.nonPieceGoodFlag = nonPieceGoodFlag;
    return this;
  }

   /**
   * Set this flag to true, if the specified quantity has a different dimension than \&quot;piece\&quot;, for example, if fractional quantities are possible.
   * @return nonPieceGoodFlag  The nonPieceGoodFlag of this {@link CustomerOrderForDeliveryBase} instance.
  **/
  @ApiModelProperty(value = "Set this flag to true, if the specified quantity has a different dimension than \"piece\", for example, if fractional quantities are possible.")
  @Nonnull public Boolean isNonPieceGoodFlag() {
    return nonPieceGoodFlag;
  }

  /**
  * Set the nonPieceGoodFlag of this {@link CustomerOrderForDeliveryBase} instance.
  *
  * @param nonPieceGoodFlag  Set this flag to true, if the specified quantity has a different dimension than \&quot;piece\&quot;, for example, if fractional quantities are possible.
  */
  public void setNonPieceGoodFlag( @Nonnull final Boolean nonPieceGoodFlag) {
    this.nonPieceGoodFlag = nonPieceGoodFlag;
  }

   /**
   * Set the frequentShopperPointsEligibilityFlag of this {@link CustomerOrderForDeliveryBase} instance and return the same instance.
   *
   * @param frequentShopperPointsEligibilityFlag  Set this flag to true if the corresponding line item is eligible for receiving loyalty points.
   * @return The same instance of this {@link CustomerOrderForDeliveryBase} class
   */
   @Nonnull public CustomerOrderForDeliveryBase frequentShopperPointsEligibilityFlag(@Nonnull final Boolean frequentShopperPointsEligibilityFlag) {
    this.frequentShopperPointsEligibilityFlag = frequentShopperPointsEligibilityFlag;
    return this;
  }

   /**
   * Set this flag to true if the corresponding line item is eligible for receiving loyalty points.
   * @return frequentShopperPointsEligibilityFlag  The frequentShopperPointsEligibilityFlag of this {@link CustomerOrderForDeliveryBase} instance.
  **/
  @ApiModelProperty(value = "Set this flag to true if the corresponding line item is eligible for receiving loyalty points.")
  @Nonnull public Boolean isFrequentShopperPointsEligibilityFlag() {
    return frequentShopperPointsEligibilityFlag;
  }

  /**
  * Set the frequentShopperPointsEligibilityFlag of this {@link CustomerOrderForDeliveryBase} instance.
  *
  * @param frequentShopperPointsEligibilityFlag  Set this flag to true if the corresponding line item is eligible for receiving loyalty points.
  */
  public void setFrequentShopperPointsEligibilityFlag( @Nonnull final Boolean frequentShopperPointsEligibilityFlag) {
    this.frequentShopperPointsEligibilityFlag = frequentShopperPointsEligibilityFlag;
  }

   /**
   * Set the discountTypeCode of this {@link CustomerOrderForDeliveryBase} instance and return the same instance.
   *
   * @param discountTypeCode  Reserved for future use.
   * @return The same instance of this {@link CustomerOrderForDeliveryBase} class
   */
   @Nonnull public CustomerOrderForDeliveryBase discountTypeCode(@Nonnull final String discountTypeCode) {
    this.discountTypeCode = discountTypeCode;
    return this;
  }

   /**
   * Reserved for future use.
   * @return discountTypeCode  The discountTypeCode of this {@link CustomerOrderForDeliveryBase} instance.
  **/
  @ApiModelProperty(value = "Reserved for future use.")
  @Nonnull public String getDiscountTypeCode() {
    return discountTypeCode;
  }

  /**
  * Set the discountTypeCode of this {@link CustomerOrderForDeliveryBase} instance.
  *
  * @param discountTypeCode  Reserved for future use.
  */
  public void setDiscountTypeCode( @Nonnull final String discountTypeCode) {
    this.discountTypeCode = discountTypeCode;
  }

   /**
   * Set the priceTypeCode of this {@link CustomerOrderForDeliveryBase} instance and return the same instance.
   *
   * @param priceTypeCode  Reserved for future use. Value 00 corresponds to \&quot;regular price\&quot;.
   * @return The same instance of this {@link CustomerOrderForDeliveryBase} class
   */
   @Nonnull public CustomerOrderForDeliveryBase priceTypeCode(@Nonnull final PriceTypeCodeEnum priceTypeCode) {
    this.priceTypeCode = priceTypeCode;
    return this;
  }

   /**
   * Reserved for future use. Value 00 corresponds to \&quot;regular price\&quot;.
   * @return priceTypeCode  The priceTypeCode of this {@link CustomerOrderForDeliveryBase} instance.
  **/
  @ApiModelProperty(value = "Reserved for future use. Value 00 corresponds to \"regular price\".")
  @Nonnull public PriceTypeCodeEnum getPriceTypeCode() {
    return priceTypeCode;
  }

  /**
  * Set the priceTypeCode of this {@link CustomerOrderForDeliveryBase} instance.
  *
  * @param priceTypeCode  Reserved for future use. Value 00 corresponds to \&quot;regular price\&quot;.
  */
  public void setPriceTypeCode( @Nonnull final PriceTypeCodeEnum priceTypeCode) {
    this.priceTypeCode = priceTypeCode;
  }

   /**
   * Set the notConsideredByPriceEngineFlag of this {@link CustomerOrderForDeliveryBase} instance and return the same instance.
   *
   * @param notConsideredByPriceEngineFlag  Determines if the price calculation should consider the line item as a trigger. This information is needed if another process (e.g. a return regarding to an existing transaction) applies rules for the line item that should not be applied. Assuming that the line item is discountable in general, the line item does not trigger a line-item-releated price derivation rule, get discount or get bonus points, if you set this flag to true. However, it can do so for a transaction-related price derivation rule. 
   * @return The same instance of this {@link CustomerOrderForDeliveryBase} class
   */
   @Nonnull public CustomerOrderForDeliveryBase notConsideredByPriceEngineFlag(@Nonnull final Boolean notConsideredByPriceEngineFlag) {
    this.notConsideredByPriceEngineFlag = notConsideredByPriceEngineFlag;
    return this;
  }

   /**
   * Determines if the price calculation should consider the line item as a trigger. This information is needed if another process (e.g. a return regarding to an existing transaction) applies rules for the line item that should not be applied. Assuming that the line item is discountable in general, the line item does not trigger a line-item-releated price derivation rule, get discount or get bonus points, if you set this flag to true. However, it can do so for a transaction-related price derivation rule. 
   * @return notConsideredByPriceEngineFlag  The notConsideredByPriceEngineFlag of this {@link CustomerOrderForDeliveryBase} instance.
  **/
  @ApiModelProperty(value = "Determines if the price calculation should consider the line item as a trigger. This information is needed if another process (e.g. a return regarding to an existing transaction) applies rules for the line item that should not be applied. Assuming that the line item is discountable in general, the line item does not trigger a line-item-releated price derivation rule, get discount or get bonus points, if you set this flag to true. However, it can do so for a transaction-related price derivation rule. ")
  @Nonnull public Boolean isNotConsideredByPriceEngineFlag() {
    return notConsideredByPriceEngineFlag;
  }

  /**
  * Set the notConsideredByPriceEngineFlag of this {@link CustomerOrderForDeliveryBase} instance.
  *
  * @param notConsideredByPriceEngineFlag  Determines if the price calculation should consider the line item as a trigger. This information is needed if another process (e.g. a return regarding to an existing transaction) applies rules for the line item that should not be applied. Assuming that the line item is discountable in general, the line item does not trigger a line-item-releated price derivation rule, get discount or get bonus points, if you set this flag to true. However, it can do so for a transaction-related price derivation rule. 
  */
  public void setNotConsideredByPriceEngineFlag( @Nonnull final Boolean notConsideredByPriceEngineFlag) {
    this.notConsideredByPriceEngineFlag = notConsideredByPriceEngineFlag;
  }

   /**
   * Set the frequentShopperPointsModifier of this {@link CustomerOrderForDeliveryBase} instance and return the same instance.
   *
   * @param frequentShopperPointsModifier  The list of modifiers for loyalty points determined by applied price rules.
   * @return The same instance of this {@link CustomerOrderForDeliveryBase} class
   */
   @Nonnull public CustomerOrderForDeliveryBase frequentShopperPointsModifier(@Nonnull final List<FrequentShopperPointsModifierType> frequentShopperPointsModifier) {
    this.frequentShopperPointsModifier = frequentShopperPointsModifier;
    return this;
  }
  /**
  * Add one FrequentShopperPointsModifier instance to this {@link CustomerOrderForDeliveryBase}.
  * @param frequentShopperPointsModifierItem The FrequentShopperPointsModifier that should be added
  * @return The same instance of type {@link CustomerOrderForDeliveryBase}
  */
  @Nonnull public CustomerOrderForDeliveryBase addFrequentShopperPointsModifierItem( @Nonnull final FrequentShopperPointsModifierType frequentShopperPointsModifierItem) {
    if (this.frequentShopperPointsModifier == null) {
      this.frequentShopperPointsModifier = new ArrayList<>();
    }
    this.frequentShopperPointsModifier.add(frequentShopperPointsModifierItem);
    return this;
  }

   /**
   * The list of modifiers for loyalty points determined by applied price rules.
   * @return frequentShopperPointsModifier  The frequentShopperPointsModifier of this {@link CustomerOrderForDeliveryBase} instance.
  **/
  @ApiModelProperty(value = "The list of modifiers for loyalty points determined by applied price rules.")
  @Nonnull public List<FrequentShopperPointsModifierType> getFrequentShopperPointsModifier() {
    return frequentShopperPointsModifier;
  }

  /**
  * Set the frequentShopperPointsModifier of this {@link CustomerOrderForDeliveryBase} instance.
  *
  * @param frequentShopperPointsModifier  The list of modifiers for loyalty points determined by applied price rules.
  */
  public void setFrequentShopperPointsModifier( @Nonnull final List<FrequentShopperPointsModifierType> frequentShopperPointsModifier) {
    this.frequentShopperPointsModifier = frequentShopperPointsModifier;
  }

   /**
   * Set the promotionPriceDerivationRuleReference of this {@link CustomerOrderForDeliveryBase} instance and return the same instance.
   *
   * @param promotionPriceDerivationRuleReference  The list of promotions for which the corresponding line item contributed as an eligibility.
   * @return The same instance of this {@link CustomerOrderForDeliveryBase} class
   */
   @Nonnull public CustomerOrderForDeliveryBase promotionPriceDerivationRuleReference(@Nonnull final List<PromotionPriceDerivationRuleReferenceType> promotionPriceDerivationRuleReference) {
    this.promotionPriceDerivationRuleReference = promotionPriceDerivationRuleReference;
    return this;
  }
  /**
  * Add one PromotionPriceDerivationRuleReference instance to this {@link CustomerOrderForDeliveryBase}.
  * @param promotionPriceDerivationRuleReferenceItem The PromotionPriceDerivationRuleReference that should be added
  * @return The same instance of type {@link CustomerOrderForDeliveryBase}
  */
  @Nonnull public CustomerOrderForDeliveryBase addPromotionPriceDerivationRuleReferenceItem( @Nonnull final PromotionPriceDerivationRuleReferenceType promotionPriceDerivationRuleReferenceItem) {
    if (this.promotionPriceDerivationRuleReference == null) {
      this.promotionPriceDerivationRuleReference = new ArrayList<>();
    }
    this.promotionPriceDerivationRuleReference.add(promotionPriceDerivationRuleReferenceItem);
    return this;
  }

   /**
   * The list of promotions for which the corresponding line item contributed as an eligibility.
   * @return promotionPriceDerivationRuleReference  The promotionPriceDerivationRuleReference of this {@link CustomerOrderForDeliveryBase} instance.
  **/
  @ApiModelProperty(value = "The list of promotions for which the corresponding line item contributed as an eligibility.")
  @Nonnull public List<PromotionPriceDerivationRuleReferenceType> getPromotionPriceDerivationRuleReference() {
    return promotionPriceDerivationRuleReference;
  }

  /**
  * Set the promotionPriceDerivationRuleReference of this {@link CustomerOrderForDeliveryBase} instance.
  *
  * @param promotionPriceDerivationRuleReference  The list of promotions for which the corresponding line item contributed as an eligibility.
  */
  public void setPromotionPriceDerivationRuleReference( @Nonnull final List<PromotionPriceDerivationRuleReferenceType> promotionPriceDerivationRuleReference) {
    this.promotionPriceDerivationRuleReference = promotionPriceDerivationRuleReference;
  }

   /**
   * Set the promotionManualTrigger of this {@link CustomerOrderForDeliveryBase} instance and return the same instance.
   *
   * @param promotionManualTrigger  Manual triggers created by the client in order to make the transaction eligible for promotions that contain eligibilities of type manual trigger.
   * @return The same instance of this {@link CustomerOrderForDeliveryBase} class
   */
   @Nonnull public CustomerOrderForDeliveryBase promotionManualTrigger(@Nonnull final List<PromotionManualTriggerType> promotionManualTrigger) {
    this.promotionManualTrigger = promotionManualTrigger;
    return this;
  }
  /**
  * Add one PromotionManualTrigger instance to this {@link CustomerOrderForDeliveryBase}.
  * @param promotionManualTriggerItem The PromotionManualTrigger that should be added
  * @return The same instance of type {@link CustomerOrderForDeliveryBase}
  */
  @Nonnull public CustomerOrderForDeliveryBase addPromotionManualTriggerItem( @Nonnull final PromotionManualTriggerType promotionManualTriggerItem) {
    if (this.promotionManualTrigger == null) {
      this.promotionManualTrigger = new ArrayList<>();
    }
    this.promotionManualTrigger.add(promotionManualTriggerItem);
    return this;
  }

   /**
   * Manual triggers created by the client in order to make the transaction eligible for promotions that contain eligibilities of type manual trigger.
   * @return promotionManualTrigger  The promotionManualTrigger of this {@link CustomerOrderForDeliveryBase} instance.
  **/
  @ApiModelProperty(value = "Manual triggers created by the client in order to make the transaction eligible for promotions that contain eligibilities of type manual trigger.")
  @Nonnull public List<PromotionManualTriggerType> getPromotionManualTrigger() {
    return promotionManualTrigger;
  }

  /**
  * Set the promotionManualTrigger of this {@link CustomerOrderForDeliveryBase} instance.
  *
  * @param promotionManualTrigger  Manual triggers created by the client in order to make the transaction eligible for promotions that contain eligibilities of type manual trigger.
  */
  public void setPromotionManualTrigger( @Nonnull final List<PromotionManualTriggerType> promotionManualTrigger) {
    this.promotionManualTrigger = promotionManualTrigger;
  }

   /**
   * Set the lineItemAttribute of this {@link CustomerOrderForDeliveryBase} instance and return the same instance.
   *
   * @param lineItemAttribute  Attribute Value pairs on line item level. This information is  taken for checking eligibilities on item level.
   * @return The same instance of this {@link CustomerOrderForDeliveryBase} class
   */
   @Nonnull public CustomerOrderForDeliveryBase lineItemAttribute(@Nonnull final List<LineItemAttributeType> lineItemAttribute) {
    this.lineItemAttribute = lineItemAttribute;
    return this;
  }
  /**
  * Add one LineItemAttribute instance to this {@link CustomerOrderForDeliveryBase}.
  * @param lineItemAttributeItem The LineItemAttribute that should be added
  * @return The same instance of type {@link CustomerOrderForDeliveryBase}
  */
  @Nonnull public CustomerOrderForDeliveryBase addLineItemAttributeItem( @Nonnull final LineItemAttributeType lineItemAttributeItem) {
    if (this.lineItemAttribute == null) {
      this.lineItemAttribute = new ArrayList<>();
    }
    this.lineItemAttribute.add(lineItemAttributeItem);
    return this;
  }

   /**
   * Attribute Value pairs on line item level. This information is  taken for checking eligibilities on item level.
   * @return lineItemAttribute  The lineItemAttribute of this {@link CustomerOrderForDeliveryBase} instance.
  **/
  @ApiModelProperty(value = "Attribute Value pairs on line item level. This information is  taken for checking eligibilities on item level.")
  @Nonnull public List<LineItemAttributeType> getLineItemAttribute() {
    return lineItemAttribute;
  }

  /**
  * Set the lineItemAttribute of this {@link CustomerOrderForDeliveryBase} instance.
  *
  * @param lineItemAttribute  Attribute Value pairs on line item level. This information is  taken for checking eligibilities on item level.
  */
  public void setLineItemAttribute( @Nonnull final List<LineItemAttributeType> lineItemAttribute) {
    this.lineItemAttribute = lineItemAttribute;
  }
  @Override
  public boolean equals(@Nonnull final java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    final CustomerOrderForDeliveryBase customerOrderForDeliveryBase = (CustomerOrderForDeliveryBase) o;
    return Objects.equals(this.any, customerOrderForDeliveryBase.any) &&
        Objects.equals(this.itemID, customerOrderForDeliveryBase.itemID) &&
        Objects.equals(this.merchandiseHierarchy, customerOrderForDeliveryBase.merchandiseHierarchy) &&
        Objects.equals(this.regularSalesUnitPrice, customerOrderForDeliveryBase.regularSalesUnitPrice) &&
        Objects.equals(this.extendedAmount, customerOrderForDeliveryBase.extendedAmount) &&
        Objects.equals(this.extendedDiscountAmount, customerOrderForDeliveryBase.extendedDiscountAmount) &&
        Objects.equals(this.quantity, customerOrderForDeliveryBase.quantity) &&
        Objects.equals(this.retailPriceModifier, customerOrderForDeliveryBase.retailPriceModifier) &&
        Objects.equals(this.itemLink, customerOrderForDeliveryBase.itemLink) &&
        Objects.equals(this.itemType, customerOrderForDeliveryBase.itemType) &&
        Objects.equals(this.nonDiscountableFlag, customerOrderForDeliveryBase.nonDiscountableFlag) &&
        Objects.equals(this.fixedPriceFlag, customerOrderForDeliveryBase.fixedPriceFlag) &&
        Objects.equals(this.taxIncludedInPriceFlag, customerOrderForDeliveryBase.taxIncludedInPriceFlag) &&
        Objects.equals(this.nonPieceGoodFlag, customerOrderForDeliveryBase.nonPieceGoodFlag) &&
        Objects.equals(this.frequentShopperPointsEligibilityFlag, customerOrderForDeliveryBase.frequentShopperPointsEligibilityFlag) &&
        Objects.equals(this.discountTypeCode, customerOrderForDeliveryBase.discountTypeCode) &&
        Objects.equals(this.priceTypeCode, customerOrderForDeliveryBase.priceTypeCode) &&
        Objects.equals(this.notConsideredByPriceEngineFlag, customerOrderForDeliveryBase.notConsideredByPriceEngineFlag) &&
        Objects.equals(this.frequentShopperPointsModifier, customerOrderForDeliveryBase.frequentShopperPointsModifier) &&
        Objects.equals(this.promotionPriceDerivationRuleReference, customerOrderForDeliveryBase.promotionPriceDerivationRuleReference) &&
        Objects.equals(this.promotionManualTrigger, customerOrderForDeliveryBase.promotionManualTrigger) &&
        Objects.equals(this.lineItemAttribute, customerOrderForDeliveryBase.lineItemAttribute);
  }

  @Override
  public int hashCode() {
    return Objects.hash(any, itemID, merchandiseHierarchy, regularSalesUnitPrice, extendedAmount, extendedDiscountAmount, quantity, retailPriceModifier, itemLink, itemType, nonDiscountableFlag, fixedPriceFlag, taxIncludedInPriceFlag, nonPieceGoodFlag, frequentShopperPointsEligibilityFlag, discountTypeCode, priceTypeCode, notConsideredByPriceEngineFlag, frequentShopperPointsModifier, promotionPriceDerivationRuleReference, promotionManualTrigger, lineItemAttribute);
  }


  @Override
  @Nonnull public String toString() {
    final StringBuilder sb = new StringBuilder();
    sb.append("class CustomerOrderForDeliveryBase {\n");
    sb.append("    any: ").append(toIndentedString(any)).append("\n");
    sb.append("    itemID: ").append(toIndentedString(itemID)).append("\n");
    sb.append("    merchandiseHierarchy: ").append(toIndentedString(merchandiseHierarchy)).append("\n");
    sb.append("    regularSalesUnitPrice: ").append(toIndentedString(regularSalesUnitPrice)).append("\n");
    sb.append("    extendedAmount: ").append(toIndentedString(extendedAmount)).append("\n");
    sb.append("    extendedDiscountAmount: ").append(toIndentedString(extendedDiscountAmount)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    retailPriceModifier: ").append(toIndentedString(retailPriceModifier)).append("\n");
    sb.append("    itemLink: ").append(toIndentedString(itemLink)).append("\n");
    sb.append("    itemType: ").append(toIndentedString(itemType)).append("\n");
    sb.append("    nonDiscountableFlag: ").append(toIndentedString(nonDiscountableFlag)).append("\n");
    sb.append("    fixedPriceFlag: ").append(toIndentedString(fixedPriceFlag)).append("\n");
    sb.append("    taxIncludedInPriceFlag: ").append(toIndentedString(taxIncludedInPriceFlag)).append("\n");
    sb.append("    nonPieceGoodFlag: ").append(toIndentedString(nonPieceGoodFlag)).append("\n");
    sb.append("    frequentShopperPointsEligibilityFlag: ").append(toIndentedString(frequentShopperPointsEligibilityFlag)).append("\n");
    sb.append("    discountTypeCode: ").append(toIndentedString(discountTypeCode)).append("\n");
    sb.append("    priceTypeCode: ").append(toIndentedString(priceTypeCode)).append("\n");
    sb.append("    notConsideredByPriceEngineFlag: ").append(toIndentedString(notConsideredByPriceEngineFlag)).append("\n");
    sb.append("    frequentShopperPointsModifier: ").append(toIndentedString(frequentShopperPointsModifier)).append("\n");
    sb.append("    promotionPriceDerivationRuleReference: ").append(toIndentedString(promotionPriceDerivationRuleReference)).append("\n");
    sb.append("    promotionManualTrigger: ").append(toIndentedString(promotionManualTrigger)).append("\n");
    sb.append("    lineItemAttribute: ").append(toIndentedString(lineItemAttribute)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(final java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


/*
 * Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved.
 */

/*
 * Calculation
 * You use the Calculation service for SAP Omnichannel Promotion Pricing in your sales channel application to determine the effective sales prices by applying promotional rules in the relevant customer context. The service can be called for a single product or for an entire shopping cart. The calculation is based on the data you uploaded to the cloud environment, and sends back prices and additional information about customer rewards to the calling application.
 *
 * OpenAPI spec version: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sap.cloud.sdk.generated.promopricing.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.sap.cloud.sdk.generated.promopricing.model.AmountCommonData;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;
import com.google.gson.annotations.SerializedName;

import javax.annotation.Nonnull;

/**
 * Reserved for future use.
 */
@ApiModel(description = "Reserved for future use.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

// CHECKSTYLE:OFF
public class PromotionExternalTriggerType 
// CHECKSTYLE:ON
{
  @JsonProperty("ExternalTriggerType")
  @SerializedName("ExternalTriggerType")
  private String externalTriggerType;

  @JsonProperty("ExternalTriggerAmount")
  @SerializedName("ExternalTriggerAmount")
  private AmountCommonData externalTriggerAmount;

  @JsonProperty("any")
  @SerializedName("any")
  private List<Object> any = new ArrayList<>();


   /**
   * Set the externalTriggerType of this {@link PromotionExternalTriggerType} instance and return the same instance.
   *
   * @param externalTriggerType  The externalTriggerType of this {@link PromotionExternalTriggerType}
   * @return The same instance of this {@link PromotionExternalTriggerType} class
   */
   @Nonnull public PromotionExternalTriggerType externalTriggerType(@Nonnull final String externalTriggerType) {
    this.externalTriggerType = externalTriggerType;
    return this;
  }

   /**
   * Get externalTriggerType
   * @return externalTriggerType  The externalTriggerType of this {@link PromotionExternalTriggerType} instance.
  **/
  @ApiModelProperty(required = true, value = "")
  @Nonnull public String getExternalTriggerType() {
    return externalTriggerType;
  }

  /**
  * Set the externalTriggerType of this {@link PromotionExternalTriggerType} instance.
  *
  * @param externalTriggerType  The externalTriggerType of this {@link PromotionExternalTriggerType}
  */
  public void setExternalTriggerType( @Nonnull final String externalTriggerType) {
    this.externalTriggerType = externalTriggerType;
  }

   /**
   * Set the externalTriggerAmount of this {@link PromotionExternalTriggerType} instance and return the same instance.
   *
   * @param externalTriggerAmount  The externalTriggerAmount of this {@link PromotionExternalTriggerType}
   * @return The same instance of this {@link PromotionExternalTriggerType} class
   */
   @Nonnull public PromotionExternalTriggerType externalTriggerAmount(@Nonnull final AmountCommonData externalTriggerAmount) {
    this.externalTriggerAmount = externalTriggerAmount;
    return this;
  }

   /**
   * Get externalTriggerAmount
   * @return externalTriggerAmount  The externalTriggerAmount of this {@link PromotionExternalTriggerType} instance.
  **/
  @ApiModelProperty(required = true, value = "")
  @Nonnull public AmountCommonData getExternalTriggerAmount() {
    return externalTriggerAmount;
  }

  /**
  * Set the externalTriggerAmount of this {@link PromotionExternalTriggerType} instance.
  *
  * @param externalTriggerAmount  The externalTriggerAmount of this {@link PromotionExternalTriggerType}
  */
  public void setExternalTriggerAmount( @Nonnull final AmountCommonData externalTriggerAmount) {
    this.externalTriggerAmount = externalTriggerAmount;
  }

   /**
   * Set the any of this {@link PromotionExternalTriggerType} instance and return the same instance.
   *
   * @param any  This is currently not supported.
   * @return The same instance of this {@link PromotionExternalTriggerType} class
   */
   @Nonnull public PromotionExternalTriggerType any(@Nonnull final List<Object> any) {
    this.any = any;
    return this;
  }
  /**
  * Add one Any instance to this {@link PromotionExternalTriggerType}.
  * @param anyItem The Any that should be added
  * @return The same instance of type {@link PromotionExternalTriggerType}
  */
  @Nonnull public PromotionExternalTriggerType addAnyItem( @Nonnull final Object anyItem) {
    if (this.any == null) {
      this.any = new ArrayList<>();
    }
    this.any.add(anyItem);
    return this;
  }

   /**
   * This is currently not supported.
   * @return any  The any of this {@link PromotionExternalTriggerType} instance.
  **/
  @ApiModelProperty(value = "This is currently not supported.")
  @Nonnull public List<Object> getAny() {
    return any;
  }

  /**
  * Set the any of this {@link PromotionExternalTriggerType} instance.
  *
  * @param any  This is currently not supported.
  */
  public void setAny( @Nonnull final List<Object> any) {
    this.any = any;
  }
  @Override
  public boolean equals(@Nonnull final java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    final PromotionExternalTriggerType promotionExternalTriggerType = (PromotionExternalTriggerType) o;
    return Objects.equals(this.externalTriggerType, promotionExternalTriggerType.externalTriggerType) &&
        Objects.equals(this.externalTriggerAmount, promotionExternalTriggerType.externalTriggerAmount) &&
        Objects.equals(this.any, promotionExternalTriggerType.any);
  }

  @Override
  public int hashCode() {
    return Objects.hash(externalTriggerType, externalTriggerAmount, any);
  }


  @Override
  @Nonnull public String toString() {
    final StringBuilder sb = new StringBuilder();
    sb.append("class PromotionExternalTriggerType {\n");
    sb.append("    externalTriggerType: ").append(toIndentedString(externalTriggerType)).append("\n");
    sb.append("    externalTriggerAmount: ").append(toIndentedString(externalTriggerAmount)).append("\n");
    sb.append("    any: ").append(toIndentedString(any)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(final java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


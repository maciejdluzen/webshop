/*
 * Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved.
 */

/*
 * Calculation
 * You use the Calculation service for SAP Omnichannel Promotion Pricing in your sales channel application to determine the effective sales prices by applying promotional rules in the relevant customer context. The service can be called for a single product or for an entire shopping cart. The calculation is based on the data you uploaded to the cloud environment, and sends back prices and additional information about customer rewards to the calling application.
 *
 * OpenAPI spec version: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sap.cloud.sdk.generated.promopricing.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.io.Serializable;
import com.google.gson.annotations.SerializedName;

import javax.annotation.Nonnull;

/**
 * QuantityCommonData
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

// CHECKSTYLE:OFF
public class QuantityCommonData 
// CHECKSTYLE:ON
{
  @JsonProperty("value")
  @SerializedName("value")
  private BigDecimal value;

  @JsonProperty("Units")
  @SerializedName("Units")
  private BigDecimal units;

  @JsonProperty("UnitOfMeasureCode")
  @SerializedName("UnitOfMeasureCode")
  private String unitOfMeasureCode;


   /**
   * Set the value of this {@link QuantityCommonData} instance and return the same instance.
   *
   * @param value  Must be an integer. The overall quantity is the product of value and units.
   * Minimum: 0
   * @return The same instance of this {@link QuantityCommonData} class
   */
   @Nonnull public QuantityCommonData value(@Nonnull final BigDecimal value) {
    this.value = value;
    return this;
  }

   /**
   * Must be an integer. The overall quantity is the product of value and units.
   * Minimum: 0
   * @return value  The value of this {@link QuantityCommonData} instance.
  **/
  @ApiModelProperty(value = "Must be an integer. The overall quantity is the product of value and units.")
  @Nonnull public BigDecimal getValue() {
    return value;
  }

  /**
  * Set the value of this {@link QuantityCommonData} instance.
  *
  * @param value  Must be an integer. The overall quantity is the product of value and units.
  * Minimum: 0
  */
  public void setValue( @Nonnull final BigDecimal value) {
    this.value = value;
  }

   /**
   * Set the units of this {@link QuantityCommonData} instance and return the same instance.
   *
   * @param units  May be fractional. Set this to one for piece like items. The overall quantity is the product of value and units.
   * Minimum: 0
   * @return The same instance of this {@link QuantityCommonData} class
   */
   @Nonnull public QuantityCommonData units(@Nonnull final BigDecimal units) {
    this.units = units;
    return this;
  }

   /**
   * May be fractional. Set this to one for piece like items. The overall quantity is the product of value and units.
   * Minimum: 0
   * @return units  The units of this {@link QuantityCommonData} instance.
  **/
  @ApiModelProperty(value = "May be fractional. Set this to one for piece like items. The overall quantity is the product of value and units.")
  @Nonnull public BigDecimal getUnits() {
    return units;
  }

  /**
  * Set the units of this {@link QuantityCommonData} instance.
  *
  * @param units  May be fractional. Set this to one for piece like items. The overall quantity is the product of value and units.
  * Minimum: 0
  */
  public void setUnits( @Nonnull final BigDecimal units) {
    this.units = units;
  }

   /**
   * Set the unitOfMeasureCode of this {@link QuantityCommonData} instance and return the same instance.
   *
   * @param unitOfMeasureCode  Must match with the information specified in the promotions and regular prices. No conversion of unit of measures is done. Uppercase format.
   * @return The same instance of this {@link QuantityCommonData} class
   */
   @Nonnull public QuantityCommonData unitOfMeasureCode(@Nonnull final String unitOfMeasureCode) {
    this.unitOfMeasureCode = unitOfMeasureCode;
    return this;
  }

   /**
   * Must match with the information specified in the promotions and regular prices. No conversion of unit of measures is done. Uppercase format.
   * @return unitOfMeasureCode  The unitOfMeasureCode of this {@link QuantityCommonData} instance.
  **/
  @ApiModelProperty(value = "Must match with the information specified in the promotions and regular prices. No conversion of unit of measures is done. Uppercase format.")
  @Nonnull public String getUnitOfMeasureCode() {
    return unitOfMeasureCode;
  }

  /**
  * Set the unitOfMeasureCode of this {@link QuantityCommonData} instance.
  *
  * @param unitOfMeasureCode  Must match with the information specified in the promotions and regular prices. No conversion of unit of measures is done. Uppercase format.
  */
  public void setUnitOfMeasureCode( @Nonnull final String unitOfMeasureCode) {
    this.unitOfMeasureCode = unitOfMeasureCode;
  }
  @Override
  public boolean equals(@Nonnull final java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    final QuantityCommonData quantityCommonData = (QuantityCommonData) o;
    return Objects.equals(this.value, quantityCommonData.value) &&
        Objects.equals(this.units, quantityCommonData.units) &&
        Objects.equals(this.unitOfMeasureCode, quantityCommonData.unitOfMeasureCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(value, units, unitOfMeasureCode);
  }


  @Override
  @Nonnull public String toString() {
    final StringBuilder sb = new StringBuilder();
    sb.append("class QuantityCommonData {\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    units: ").append(toIndentedString(units)).append("\n");
    sb.append("    unitOfMeasureCode: ").append(toIndentedString(unitOfMeasureCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(final java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


/*
 * Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved.
 */

/*
 * Calculation
 * You use the Calculation service for SAP Omnichannel Promotion Pricing in your sales channel application to determine the effective sales prices by applying promotional rules in the relevant customer context. The service can be called for a single product or for an entire shopping cart. The calculation is based on the data you uploaded to the cloud environment, and sends back prices and additional information about customer rewards to the calling application.
 *
 * OpenAPI spec version: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sap.cloud.sdk.generated.promopricing.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.google.gson.annotations.SerializedName;

import javax.annotation.Nonnull;

/**
 * An entity for which prices or promotions are valid.
 */
@ApiModel(description = "An entity for which prices or promotions are valid.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

// CHECKSTYLE:OFF
public class BusinessUnitCommonData 
// CHECKSTYLE:ON
{
  @JsonProperty("value")
  @SerializedName("value")
  private String value;

  /**
   * Specifies the type of a business unit. There may be several business units with the same identifier but different types. Default value is RetailStore. 
   */
  public enum TypeCodeEnum {
    /**
    * The RETAILSTORE option of this BusinessUnitCommonData
    */
    RETAILSTORE("RetailStore"),
    
    /**
    * The CUSTOMER option of this BusinessUnitCommonData
    */
    CUSTOMER("Customer"),
    
    /**
    * The FACTORY option of this BusinessUnitCommonData
    */
    FACTORY("Factory"),
    
    /**
    * The DISTRIBUTIONCENTER option of this BusinessUnitCommonData
    */
    DISTRIBUTIONCENTER("DistributionCenter"),
    
    /**
    * The VENDOR option of this BusinessUnitCommonData
    */
    VENDOR("Vendor");

    private String value;

    TypeCodeEnum(String value) {
      this.value = value;
    }

    /**
    * Get the value of the enum
    * @return The enum value
    */
    @JsonValue
    @Nonnull public String getValue() {
      return value;
    }

    /**
    * Get the String value of the enum value.
    * @return The enum value as String
    */
    @Override
    @Nonnull public String toString() {
      return String.valueOf(value);
    }

    /**
    * Get the enum value from a String value
    * @param value The Strin value
    * @return The enum value of type BusinessUnitCommonData
    */
    @JsonCreator
    @Nonnull public static TypeCodeEnum fromValue(@Nonnull final String value) {
      for (TypeCodeEnum b : TypeCodeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  @JsonProperty("TypeCode")
  @SerializedName("TypeCode")
  private TypeCodeEnum typeCode;


   /**
   * Set the value of this {@link BusinessUnitCommonData} instance and return the same instance.
   *
   * @param value  Identifies the business unit in combination with business unit type and master data source system identifier.
   * @return The same instance of this {@link BusinessUnitCommonData} class
   */
   @Nonnull public BusinessUnitCommonData value(@Nonnull final String value) {
    this.value = value;
    return this;
  }

   /**
   * Identifies the business unit in combination with business unit type and master data source system identifier.
   * @return value  The value of this {@link BusinessUnitCommonData} instance.
  **/
  @ApiModelProperty(required = true, value = "Identifies the business unit in combination with business unit type and master data source system identifier.")
  @Nonnull public String getValue() {
    return value;
  }

  /**
  * Set the value of this {@link BusinessUnitCommonData} instance.
  *
  * @param value  Identifies the business unit in combination with business unit type and master data source system identifier.
  */
  public void setValue( @Nonnull final String value) {
    this.value = value;
  }

   /**
   * Set the typeCode of this {@link BusinessUnitCommonData} instance and return the same instance.
   *
   * @param typeCode  Specifies the type of a business unit. There may be several business units with the same identifier but different types. Default value is RetailStore. 
   * @return The same instance of this {@link BusinessUnitCommonData} class
   */
   @Nonnull public BusinessUnitCommonData typeCode(@Nonnull final TypeCodeEnum typeCode) {
    this.typeCode = typeCode;
    return this;
  }

   /**
   * Specifies the type of a business unit. There may be several business units with the same identifier but different types. Default value is RetailStore. 
   * @return typeCode  The typeCode of this {@link BusinessUnitCommonData} instance.
  **/
  @ApiModelProperty(example = "RetailStore", value = "Specifies the type of a business unit. There may be several business units with the same identifier but different types. Default value is RetailStore. ")
  @Nonnull public TypeCodeEnum getTypeCode() {
    return typeCode;
  }

  /**
  * Set the typeCode of this {@link BusinessUnitCommonData} instance.
  *
  * @param typeCode  Specifies the type of a business unit. There may be several business units with the same identifier but different types. Default value is RetailStore. 
  */
  public void setTypeCode( @Nonnull final TypeCodeEnum typeCode) {
    this.typeCode = typeCode;
  }
  @Override
  public boolean equals(@Nonnull final java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    final BusinessUnitCommonData businessUnitCommonData = (BusinessUnitCommonData) o;
    return Objects.equals(this.value, businessUnitCommonData.value) &&
        Objects.equals(this.typeCode, businessUnitCommonData.typeCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(value, typeCode);
  }


  @Override
  @Nonnull public String toString() {
    final StringBuilder sb = new StringBuilder();
    sb.append("class BusinessUnitCommonData {\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    typeCode: ").append(toIndentedString(typeCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(final java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


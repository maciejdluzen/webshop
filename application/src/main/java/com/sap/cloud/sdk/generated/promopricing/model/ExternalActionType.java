/*
 * Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved.
 */

/*
 * Calculation
 * You use the Calculation service for SAP Omnichannel Promotion Pricing in your sales channel application to determine the effective sales prices by applying promotional rules in the relevant customer context. The service can be called for a single product or for an entire shopping cart. The calculation is based on the data you uploaded to the cloud environment, and sends back prices and additional information about customer rewards to the calling application.
 *
 * OpenAPI spec version: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sap.cloud.sdk.generated.promopricing.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.sap.cloud.sdk.generated.promopricing.model.ExternalActionParameterType;
import com.sap.cloud.sdk.generated.promopricing.model.ExternalActionTextType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;
import com.google.gson.annotations.SerializedName;

import javax.annotation.Nonnull;

/**
 * Contains all information specified by a price derivation rule of type \&quot;External Action\&quot;.
 */
@ApiModel(description = "Contains all information specified by a price derivation rule of type \"External Action\".")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

// CHECKSTYLE:OFF
public class ExternalActionType 
// CHECKSTYLE:ON
{
  @JsonProperty("Text")
  @SerializedName("Text")
  private List<ExternalActionTextType> text = new ArrayList<>();

  @JsonProperty("Parameter")
  @SerializedName("Parameter")
  private List<ExternalActionParameterType> parameter = new ArrayList<>();

  @JsonProperty("any")
  @SerializedName("any")
  private List<Object> any = new ArrayList<>();

  @JsonProperty("ID")
  @SerializedName("ID")
  private String ID;


   /**
   * Set the text of this {@link ExternalActionType} instance and return the same instance.
   *
   * @param text  The text of this {@link ExternalActionType}
   * @return The same instance of this {@link ExternalActionType} class
   */
   @Nonnull public ExternalActionType text(@Nonnull final List<ExternalActionTextType> text) {
    this.text = text;
    return this;
  }
  /**
  * Add one Text instance to this {@link ExternalActionType}.
  * @param textItem The Text that should be added
  * @return The same instance of type {@link ExternalActionType}
  */
  @Nonnull public ExternalActionType addTextItem( @Nonnull final ExternalActionTextType textItem) {
    if (this.text == null) {
      this.text = new ArrayList<>();
    }
    this.text.add(textItem);
    return this;
  }

   /**
   * Get text
   * @return text  The text of this {@link ExternalActionType} instance.
  **/
  @ApiModelProperty(value = "")
  @Nonnull public List<ExternalActionTextType> getText() {
    return text;
  }

  /**
  * Set the text of this {@link ExternalActionType} instance.
  *
  * @param text  The text of this {@link ExternalActionType}
  */
  public void setText( @Nonnull final List<ExternalActionTextType> text) {
    this.text = text;
  }

   /**
   * Set the parameter of this {@link ExternalActionType} instance and return the same instance.
   *
   * @param parameter  The parameter of this {@link ExternalActionType}
   * @return The same instance of this {@link ExternalActionType} class
   */
   @Nonnull public ExternalActionType parameter(@Nonnull final List<ExternalActionParameterType> parameter) {
    this.parameter = parameter;
    return this;
  }
  /**
  * Add one Parameter instance to this {@link ExternalActionType}.
  * @param parameterItem The Parameter that should be added
  * @return The same instance of type {@link ExternalActionType}
  */
  @Nonnull public ExternalActionType addParameterItem( @Nonnull final ExternalActionParameterType parameterItem) {
    if (this.parameter == null) {
      this.parameter = new ArrayList<>();
    }
    this.parameter.add(parameterItem);
    return this;
  }

   /**
   * Get parameter
   * @return parameter  The parameter of this {@link ExternalActionType} instance.
  **/
  @ApiModelProperty(value = "")
  @Nonnull public List<ExternalActionParameterType> getParameter() {
    return parameter;
  }

  /**
  * Set the parameter of this {@link ExternalActionType} instance.
  *
  * @param parameter  The parameter of this {@link ExternalActionType}
  */
  public void setParameter( @Nonnull final List<ExternalActionParameterType> parameter) {
    this.parameter = parameter;
  }

   /**
   * Set the any of this {@link ExternalActionType} instance and return the same instance.
   *
   * @param any  This is currently not supported.
   * @return The same instance of this {@link ExternalActionType} class
   */
   @Nonnull public ExternalActionType any(@Nonnull final List<Object> any) {
    this.any = any;
    return this;
  }
  /**
  * Add one Any instance to this {@link ExternalActionType}.
  * @param anyItem The Any that should be added
  * @return The same instance of type {@link ExternalActionType}
  */
  @Nonnull public ExternalActionType addAnyItem( @Nonnull final Object anyItem) {
    if (this.any == null) {
      this.any = new ArrayList<>();
    }
    this.any.add(anyItem);
    return this;
  }

   /**
   * This is currently not supported.
   * @return any  The any of this {@link ExternalActionType} instance.
  **/
  @ApiModelProperty(value = "This is currently not supported.")
  @Nonnull public List<Object> getAny() {
    return any;
  }

  /**
  * Set the any of this {@link ExternalActionType} instance.
  *
  * @param any  This is currently not supported.
  */
  public void setAny( @Nonnull final List<Object> any) {
    this.any = any;
  }

   /**
   * Set the ID of this {@link ExternalActionType} instance and return the same instance.
   *
   * @param ID  Defines the external action.
   * @return The same instance of this {@link ExternalActionType} class
   */
   @Nonnull public ExternalActionType ID(@Nonnull final String ID) {
    this.ID = ID;
    return this;
  }

   /**
   * Defines the external action.
   * @return ID  The ID of this {@link ExternalActionType} instance.
  **/
  @ApiModelProperty(required = true, value = "Defines the external action.")
  @Nonnull public String getID() {
    return ID;
  }

  /**
  * Set the ID of this {@link ExternalActionType} instance.
  *
  * @param ID  Defines the external action.
  */
  public void setID( @Nonnull final String ID) {
    this.ID = ID;
  }
  @Override
  public boolean equals(@Nonnull final java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    final ExternalActionType externalActionType = (ExternalActionType) o;
    return Objects.equals(this.text, externalActionType.text) &&
        Objects.equals(this.parameter, externalActionType.parameter) &&
        Objects.equals(this.any, externalActionType.any) &&
        Objects.equals(this.ID, externalActionType.ID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(text, parameter, any, ID);
  }


  @Override
  @Nonnull public String toString() {
    final StringBuilder sb = new StringBuilder();
    sb.append("class ExternalActionType {\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    parameter: ").append(toIndentedString(parameter)).append("\n");
    sb.append("    any: ").append(toIndentedString(any)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(final java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


/*
 * Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved.
 */

/*
 * Calculation
 * You use the Calculation service for SAP Omnichannel Promotion Pricing in your sales channel application to determine the effective sales prices by applying promotional rules in the relevant customer context. The service can be called for a single product or for an entire shopping cart. The calculation is based on the data you uploaded to the cloud environment, and sends back prices and additional information about customer rewards to the calling application.
 *
 * OpenAPI spec version: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sap.cloud.sdk.generated.promopricing.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.sap.cloud.sdk.generated.promopricing.model.MerchSetNodeType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;
import com.google.gson.annotations.SerializedName;

import javax.annotation.Nonnull;

/**
 * A structure for modelling a merchandise set  
 */
@ApiModel(description = "A structure for modelling a merchandise set  ")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

// CHECKSTYLE:OFF
public class MerchSetType 
// CHECKSTYLE:ON
{
  @JsonProperty("any")
  @SerializedName("any")
  private List<Object> any = new ArrayList<>();

  @JsonProperty("MerchandiseSetID")
  @SerializedName("MerchandiseSetID")
  private String merchandiseSetID;

  @JsonProperty("RootNode")
  @SerializedName("RootNode")
  private MerchSetNodeType rootNode;


   /**
   * Set the any of this {@link MerchSetType} instance and return the same instance.
   *
   * @param any  This is currently not supported.
   * @return The same instance of this {@link MerchSetType} class
   */
   @Nonnull public MerchSetType any(@Nonnull final List<Object> any) {
    this.any = any;
    return this;
  }
  /**
  * Add one Any instance to this {@link MerchSetType}.
  * @param anyItem The Any that should be added
  * @return The same instance of type {@link MerchSetType}
  */
  @Nonnull public MerchSetType addAnyItem( @Nonnull final Object anyItem) {
    if (this.any == null) {
      this.any = new ArrayList<>();
    }
    this.any.add(anyItem);
    return this;
  }

   /**
   * This is currently not supported.
   * @return any  The any of this {@link MerchSetType} instance.
  **/
  @ApiModelProperty(value = "This is currently not supported.")
  @Nonnull public List<Object> getAny() {
    return any;
  }

  /**
  * Set the any of this {@link MerchSetType} instance.
  *
  * @param any  This is currently not supported.
  */
  public void setAny( @Nonnull final List<Object> any) {
    this.any = any;
  }

   /**
   * Set the merchandiseSetID of this {@link MerchSetType} instance and return the same instance.
   *
   * @param merchandiseSetID  Decimal representation of a 64 bit integer value
   * @return The same instance of this {@link MerchSetType} class
   */
   @Nonnull public MerchSetType merchandiseSetID(@Nonnull final String merchandiseSetID) {
    this.merchandiseSetID = merchandiseSetID;
    return this;
  }

   /**
   * Decimal representation of a 64 bit integer value
   * @return merchandiseSetID  The merchandiseSetID of this {@link MerchSetType} instance.
  **/
  @ApiModelProperty(value = "Decimal representation of a 64 bit integer value")
  @Nonnull public String getMerchandiseSetID() {
    return merchandiseSetID;
  }

  /**
  * Set the merchandiseSetID of this {@link MerchSetType} instance.
  *
  * @param merchandiseSetID  Decimal representation of a 64 bit integer value
  */
  public void setMerchandiseSetID( @Nonnull final String merchandiseSetID) {
    this.merchandiseSetID = merchandiseSetID;
  }

   /**
   * Set the rootNode of this {@link MerchSetType} instance and return the same instance.
   *
   * @param rootNode  The rootNode of this {@link MerchSetType}
   * @return The same instance of this {@link MerchSetType} class
   */
   @Nonnull public MerchSetType rootNode(@Nonnull final MerchSetNodeType rootNode) {
    this.rootNode = rootNode;
    return this;
  }

   /**
   * Get rootNode
   * @return rootNode  The rootNode of this {@link MerchSetType} instance.
  **/
  @ApiModelProperty(value = "")
  @Nonnull public MerchSetNodeType getRootNode() {
    return rootNode;
  }

  /**
  * Set the rootNode of this {@link MerchSetType} instance.
  *
  * @param rootNode  The rootNode of this {@link MerchSetType}
  */
  public void setRootNode( @Nonnull final MerchSetNodeType rootNode) {
    this.rootNode = rootNode;
  }
  @Override
  public boolean equals(@Nonnull final java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    final MerchSetType merchSetType = (MerchSetType) o;
    return Objects.equals(this.any, merchSetType.any) &&
        Objects.equals(this.merchandiseSetID, merchSetType.merchandiseSetID) &&
        Objects.equals(this.rootNode, merchSetType.rootNode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(any, merchandiseSetID, rootNode);
  }


  @Override
  @Nonnull public String toString() {
    final StringBuilder sb = new StringBuilder();
    sb.append("class MerchSetType {\n");
    sb.append("    any: ").append(toIndentedString(any)).append("\n");
    sb.append("    merchandiseSetID: ").append(toIndentedString(merchandiseSetID)).append("\n");
    sb.append("    rootNode: ").append(toIndentedString(rootNode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(final java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

